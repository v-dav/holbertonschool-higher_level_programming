===========================
How to use 7-base_geometry.py
===========================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Use of integer_validator() method
===========================

>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

The value passed to the method is
not an integer
===========================

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

The value passed to the method is
a negative or zero integer
===========================

>>> bg.integer_validator("age", 0) # doctest: +REPORT_NDIFF
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

An empty string is passes as name
============================

>>> bg.integer_validator("", 5)

Missing name argument
============================

>>> bg.integer_validator(5)
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

Missing all arguments
============================

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

Missing value argument
============================

>>> bg.integer_validator("John")
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'
